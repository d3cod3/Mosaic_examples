#N canvas 1006 207 624 630 10;
#X text 8 6 Mosaic |Â Live Visual Patching Creative-Coding Platform
;
#X text 8 42 https://mosaic.d3cod3.org;
#N canvas 660 57 500 238 mosaicADC 0;
#X obj 33 161 *~ 1;
#X obj 33 184 outlet~;
#X obj 17 107 clip 0 1;
#X obj 17 83 r in1Gain;
#X obj 130 163 *~ 1;
#X obj 130 186 outlet~;
#X obj 182 129 clip 0 1;
#X obj 198 18 adc~ 1 2 3 4;
#X obj 182 105 r in2Gain;
#X obj 264 158 *~ 1;
#X obj 264 181 outlet~;
#X obj 280 125 clip 0 1;
#X obj 280 101 r in3Gain;
#X obj 418 165 *~ 1;
#X obj 418 188 outlet~;
#X obj 405 119 clip 0 1;
#X obj 405 95 r in4Gain;
#X connect 0 0 1 0;
#X connect 2 0 0 1;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X connect 6 0 4 1;
#X connect 7 0 0 0;
#X connect 7 1 4 0;
#X connect 7 2 9 0;
#X connect 7 3 13 0;
#X connect 8 0 6 0;
#X connect 9 0 10 0;
#X connect 11 0 9 1;
#X connect 12 0 11 0;
#X connect 13 0 14 0;
#X connect 15 0 13 1;
#X connect 16 0 15 0;
#X restore 15 101 pd mosaicADC;
#N canvas 1339 602 499 348 mosaicDAC 0;
#X obj 181 270 dac~ 1 2 3 4;
#X obj 25 186 *~ 1;
#X obj 25 64 lop~ 18000;
#X obj 25 87 hip~ 5;
#X obj 25 111 clip~ -0.99 0.99;
#X obj 67 156 clip 0 1;
#X obj 25 36 inlet~;
#X obj 136 185 *~ 1;
#X obj 136 63 lop~ 18000;
#X obj 136 86 hip~ 5;
#X obj 136 110 clip~ -0.99 0.99;
#X obj 178 155 clip 0 1;
#X obj 136 35 inlet~;
#X obj 246 185 *~ 1;
#X obj 246 63 lop~ 18000;
#X obj 246 86 hip~ 5;
#X obj 246 110 clip~ -0.99 0.99;
#X obj 288 155 clip 0 1;
#X obj 246 35 inlet~;
#X obj 358 185 *~ 1;
#X obj 358 63 lop~ 18000;
#X obj 358 86 hip~ 5;
#X obj 358 110 clip~ -0.99 0.99;
#X obj 400 155 clip 0 1;
#X obj 358 35 inlet~;
#X obj 67 134 r out1Gain;
#X obj 178 133 r out2Gain;
#X obj 288 133 r out3Gain;
#X obj 400 133 r out4Gain;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X connect 5 0 1 1;
#X connect 6 0 2 0;
#X connect 7 0 0 1;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 10 0 7 0;
#X connect 11 0 7 1;
#X connect 12 0 8 0;
#X connect 13 0 0 2;
#X connect 14 0 15 0;
#X connect 15 0 16 0;
#X connect 16 0 13 0;
#X connect 17 0 13 1;
#X connect 18 0 14 0;
#X connect 19 0 0 3;
#X connect 20 0 21 0;
#X connect 21 0 22 0;
#X connect 22 0 19 0;
#X connect 23 0 19 1;
#X connect 24 0 20 0;
#X connect 25 0 5 0;
#X connect 26 0 11 0;
#X connect 27 0 17 0;
#X connect 28 0 23 0;
#X restore 35 531 pd mosaicDAC;
#N canvas 1037 801 885 239 dataFromMosaic 0;
#X obj 11 172 s in1Gain;
#X obj 78 172 s in2Gain;
#X obj 144 171 s in3Gain;
#X obj 210 171 s in4Gain;
#X obj 497 193 s out1Gain;
#X obj 566 193 s out2Gain;
#X obj 635 192 s out3Gain;
#X obj 705 192 s out4Gain;
#X obj 165 16 r fromMosaic;
#X obj 165 36 list split 6;
#X obj 7 113 unpack 0 0 0 0 0 0;
#X obj 567 132 unpack 0 0 0 0 0 0;
#X text 368 7 Mosaic can send to PD a sequence of floats (vector<floats>)
through the "pd patch" object last inlet. In this case we are sending
a vector of size 12 \, but the user can send from Mosaic a vector with
whatever size. On the PD side we just need to split the incoming list
and unpack.;
#X obj 300 168 s in5Pitch;
#X text 515 80 In this example we are controlling the input and output
audio channels gain and the main synth pitch;
#X obj 339 138 s in5LFO, f 10;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 9 1 11 0;
#X connect 10 0 0 0;
#X connect 10 1 1 0;
#X connect 10 2 2 0;
#X connect 10 3 3 0;
#X connect 10 4 13 0;
#X connect 10 5 15 0;
#X connect 11 0 4 0;
#X connect 11 1 5 0;
#X connect 11 2 6 0;
#X connect 11 3 7 0;
#X restore 366 8 pd dataFromMosaic;
#N canvas 986 600 755 304 dataToMosaic 0;
#X obj 176 251 s toMosaic;
#X obj 184 122 t b b b;
#X obj 138 183 f 0;
#X obj 27 181 f 0;
#X obj 247 184 f 0;
#X obj 184 94 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 365 11 Mosaic can receive from here a sequence of floats (vector<float>
on Mosaic side). We are showing here how to send 3 floats \, if you
need more just add b to the trigger object and add numbers with the
float object. The order of the triggers will be the order of the vector<float>
var on Mosaic side.;
#X obj 177 223 pack 0 0 0;
#X obj 184 32 loadbang;
#X obj 184 61 metro 40;
#X connect 1 0 3 0;
#X connect 1 1 2 0;
#X connect 1 2 4 0;
#X connect 2 0 7 1;
#X connect 3 0 7 0;
#X connect 4 0 7 2;
#X connect 5 0 1 0;
#X connect 7 0 0 0;
#X connect 8 0 9 0;
#X connect 9 0 5 0;
#X restore 378 31 pd dataToMosaic;
#X text 109 101 "pd patch" Mosaic object first 4 audio inlets;
#X text 134 531 "pd patch" Mosaic object first 4 audio outlets;
#X obj 35 241 mtof;
#X obj 35 265 phasor~;
#X text 33 162 SQUARE WAVE OSCILLATOR;
#X text 179 242 [mtof] converts MIDI notes to frequency in Hertz.;
#X text 179 266 [phasor~] makes a ramping waveform.;
#X text 178 430 [expr~] checks if the value of the ramp is greater
;
#X obj 35 433 expr~ $v1 > $v2;
#X obj 122 384 abs~;
#X text 179 353 Make an LFO sine wave. Output goes from -1 to 1;
#X text 179 382 Convert any negative values from [osc~] to positive
ones (range = 0-1).;
#X text 180 444 than the number at the second input (0-1 range). If
so \, then it outputs 1 \, otherwise 0;
#X obj 35 202 r in5Pitch;
#X text 180 218 Receive MIDI note values (0-127).;
#X text 8 24 Emanuele Mazza aka n3m3da 2020 MIT;
#X obj 122 353 osc~ 10;
#X obj 122 291 r in5LFO;
#X obj 122 323 / 100;
#X text 189 292 Range 1 - 10;
#X connect 8 0 9 0;
#X connect 9 0 14 0;
#X connect 14 0 3 0;
#X connect 14 0 3 1;
#X connect 15 0 14 1;
#X connect 19 0 8 0;
#X connect 22 0 15 0;
#X connect 23 0 24 0;
#X connect 24 0 22 0;
